# ------------------------------------------------------------------------------------------------------------------------
# Pipeline to build and deploy the entire application
# ------------------------------------------------------------------------------------------------------------------------
name: $(date:yyyy).$(date:MM).$(date:dd)$(rev:.r)

pool:
  vmImage: windows-latest

# ------------------------------------------------------------------------------------------------------------------------
trigger: none
 
parameters:
  - name: createInfra
    displayName: Create Infra
    type: boolean
    default: true
  - name: buildDeployApps
    displayName: Build and Deploy Apps
    type: boolean
    default: true
  - name: runDevSecOpsScan
    displayName: Run MS DevSecOps Scan
    type: boolean
    default: false
  - name: runGHAzDOScan
    displayName: Run GHAS Scan
    type: boolean
    default: false
  - name: runPlaywright
    displayName: Run Playwright Tests
    type: boolean
    default: false

# ------------------------------------------------------------------------------------------------------------------------
variables:
  # See .azdo/pipelines/readme.me for details how to create this variable group and what it contains
  #- group: 'Playwright'

  # Project Static variables
  - name: webSourcePath 
    value: 'services/Demo.WebUI'
  - name: apiSourcePath
    value:  'services/Demo.API'

  - name: webPackageName
    value:  'Demo.WebUI.zip'
  - name: apiPackageName
    value:  'Demo.API.zip'

  - name: webArtifactName
    value:  'WebApp'
  - name: apiArtifactName
    value:  'WebApi'

  - name: workingDirectoryCode
    value:  'services/'
  - name: workingDirectoryInfra
    value:  'infra/'
  
stages:
# ------------------------------------------------------------------------------------------------------------------------
  
- template: pipes/build-infra-deploy-vg-pipe.yml
  parameters:
    variableGroupName: 'Playwright'

    createInfra: ${{ parameters.createInfra }}
    buildDeployApps: ${{ parameters.buildDeployApps }}
    runDevSecOpsScan: ${{ parameters.runDevSecOpsScan }}
    runGHAzDOScan: ${{ parameters.runGHAzDOScan }}

    webSourcePath: ${{ variables.webSourcePath }}
    apiSourcePath: ${{ variables.apiSourcePath }}

    webPackageName: ${{ variables.webPackageName }}
    apiPackageName: ${{ variables.apiPackageName }}

    webArtifactName:  ${{ variables.webArtifactName }}
    apiArtifactName:  ${{ variables.apiArtifactName }}

    workingDirectoryCode: ${{ variables.workingDirectoryCode }}
    workingDirectoryInfra: ${{ variables.workingDirectoryInfra }}

    # From VG:
    # adminEmail:  ${{ variables.adminEmail }}
    # adDomain: ${{ variables.adDomain }}
    # adTenantId: ${{ variables.adTenantId }}
    # adClientId: ${{ variables.acClientId }}
    # apiAppName:  ${{ variables.apiAppName }}
    # apiAppAPIMName:  ${{ variables.apiAppAPIMName }}
    # apiKey
    # azureSubscription: ${{ variables.azureSubscription }}
    # organizationName:  ${{ variables.organizationName }}
    # region: ${{ variables.region }}
    # resourceGroupName:  ${{ variables.resourceGroupName }}
    # webAPIScope:  ${{ variables.webAPIScope }}
    # webAPIUrl:  ${{ variables.webAPIUrl }}
    # webAppName:  ${{ variables.webAppName }}
